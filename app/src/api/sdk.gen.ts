// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, Client, TDataShape } from './client';
import type { StationData, StationResponses, StationErrors, TrainsForStationData, TrainsForStationResponses, TrainsForStationErrors, StationsData, StationsResponses, StationsErrors, TrainData, TrainResponses, TrainErrors, TrainsData, TrainsResponses, TrainsErrors, TrainByIdData, TrainByIdResponses, TrainByIdErrors, MessagesForDateAndCodeData, MessagesForDateAndCodeResponses, MessagesForDateAndCodeErrors, MessagesForTrainData, MessagesForTrainResponses, MessagesForTrainErrors } from './types.gen';
import { client } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const station = <ThrowOnError extends boolean = false>(options: Options<StationData, ThrowOnError>) => {
    return (options.client ?? client).get<StationResponses, StationErrors, ThrowOnError>({
        url: '/stations/{ds100}',
        ...options
    });
};

export const trainsForStation = <ThrowOnError extends boolean = false>(options: Options<TrainsForStationData, ThrowOnError>) => {
    return (options.client ?? client).get<TrainsForStationResponses, TrainsForStationErrors, ThrowOnError>({
        url: '/stations/{ds100}/trains/{date}',
        ...options
    });
};

export const stations = <ThrowOnError extends boolean = false>(options?: Options<StationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<StationsResponses, StationsErrors, ThrowOnError>({
        url: '/stations/',
        ...options
    });
};

export const train = <ThrowOnError extends boolean = false>(options: Options<TrainData, ThrowOnError>) => {
    return (options.client ?? client).get<TrainResponses, TrainErrors, ThrowOnError>({
        url: '/trains/{number}/{date}',
        ...options
    });
};

export const trains = <ThrowOnError extends boolean = false>(options: Options<TrainsData, ThrowOnError>) => {
    return (options.client ?? client).get<TrainsResponses, TrainsErrors, ThrowOnError>({
        url: '/trains/on/{date}',
        ...options
    });
};

export const trainById = <ThrowOnError extends boolean = false>(options: Options<TrainByIdData, ThrowOnError>) => {
    return (options.client ?? client).get<TrainByIdResponses, TrainByIdErrors, ThrowOnError>({
        url: '/trains/{id}',
        ...options
    });
};

export const messagesForDateAndCode = <ThrowOnError extends boolean = false>(options: Options<MessagesForDateAndCodeData, ThrowOnError>) => {
    return (options.client ?? client).get<MessagesForDateAndCodeResponses, MessagesForDateAndCodeErrors, ThrowOnError>({
        url: '/messages/{date}/{code}',
        ...options
    });
};

export const messagesForTrain = <ThrowOnError extends boolean = false>(options: Options<MessagesForTrainData, ThrowOnError>) => {
    return (options.client ?? client).get<MessagesForTrainResponses, MessagesForTrainErrors, ThrowOnError>({
        url: '/messages/train/{train_id}',
        ...options
    });
};
