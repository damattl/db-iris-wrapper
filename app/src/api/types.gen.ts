// This file is auto-generated by @hey-api/openapi-ts

export type StationView = {
    id: number;
    lat?: number | null;
    lon?: number | null;
    name: string;
    ds100: string;
};

export type ErrorBody = {
    code: number;
    error: string;
    message: string;
};

export type TrainView = {
    id: string;
    operator?: string | null;
    category: string;
    number: string;
    line?: string | null;
    date: string;
    next_stop?: StopView | null;
    past_stops: Array<StopView>;
    next_stops: Array<StopView>;
};

export type StopView = {
    id: string;
    train_id: string;
    station_id: number;
    station?: StationView | null;
    arrival?: MovementView | null;
    departure?: MovementView | null;
};

export type MovementView = {
    platform?: string | null;
    planned?: string | null;
    current?: string | null;
    planned_path?: Array<string> | null;
    changed_path?: Array<string> | null;
};

export type DateParam = string;

export type MessageView = {
    id: string;
    train_id: string;
    train: string;
    valid_from?: string | null;
    valid_to?: string | null;
    priority?: number | null;
    category?: string | null;
    code?: number | null;
    timestamp: string;
    m_type?: string | null;
    last_updated?: string | null;
    stations: Array<number>;
};

export type StatusCodeView = {
    code: number;
    c_type?: string | null;
    long_text: string;
};

export type StationData = {
    body?: never;
    path: {
        ds100: string;
    };
    query?: never;
    url: '/stations/{ds100}';
};

export type StationErrors = {
    default: ErrorBody;
};

export type StationError = StationErrors[keyof StationErrors];

export type StationResponses = {
    200: StationView;
};

export type StationResponse = StationResponses[keyof StationResponses];

export type TrainsForStationData = {
    body?: never;
    path: {
        ds100: string;
        date: DateParam;
    };
    query?: never;
    url: '/stations/{ds100}/trains/{date}';
};

export type TrainsForStationErrors = {
    default: ErrorBody;
};

export type TrainsForStationError = TrainsForStationErrors[keyof TrainsForStationErrors];

export type TrainsForStationResponses = {
    200: Array<TrainView>;
};

export type TrainsForStationResponse = TrainsForStationResponses[keyof TrainsForStationResponses];

export type StopsForStationData = {
    body?: never;
    path: {
        ds100: string;
        date: DateParam;
    };
    query?: never;
    url: '/stations/{ds100}/stops/{date}';
};

export type StopsForStationErrors = {
    default: ErrorBody;
};

export type StopsForStationError = StopsForStationErrors[keyof StopsForStationErrors];

export type StopsForStationResponses = {
    200: Array<StopView>;
};

export type StopsForStationResponse = StopsForStationResponses[keyof StopsForStationResponses];

export type StationsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/stations/';
};

export type StationsErrors = {
    default: ErrorBody;
};

export type StationsError = StationsErrors[keyof StationsErrors];

export type StationsResponses = {
    200: Array<StationView>;
};

export type StationsResponse = StationsResponses[keyof StationsResponses];

export type TrainData = {
    body?: never;
    path: {
        number: string;
        date: DateParam;
    };
    query?: {
        include_stops?: boolean | null;
    };
    url: '/trains/{number}/{date}';
};

export type TrainErrors = {
    default: ErrorBody;
};

export type TrainError = TrainErrors[keyof TrainErrors];

export type TrainResponses = {
    200: TrainView;
};

export type TrainResponse = TrainResponses[keyof TrainResponses];

export type TrainsData = {
    body?: never;
    path: {
        date: DateParam;
    };
    query?: never;
    url: '/trains/on/{date}';
};

export type TrainsErrors = {
    default: ErrorBody;
};

export type TrainsError = TrainsErrors[keyof TrainsErrors];

export type TrainsResponses = {
    200: Array<TrainView>;
};

export type TrainsResponse = TrainsResponses[keyof TrainsResponses];

export type TrainByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: {
        include_stops?: boolean | null;
    };
    url: '/trains/{id}';
};

export type TrainByIdErrors = {
    default: ErrorBody;
};

export type TrainByIdError = TrainByIdErrors[keyof TrainByIdErrors];

export type TrainByIdResponses = {
    200: TrainView;
};

export type TrainByIdResponse = TrainByIdResponses[keyof TrainByIdResponses];

export type MessagesForDateAndCodeData = {
    body?: never;
    path: {
        date: DateParam;
        code: number;
    };
    query?: never;
    url: '/messages/{date}/{code}';
};

export type MessagesForDateAndCodeErrors = {
    default: ErrorBody;
};

export type MessagesForDateAndCodeError = MessagesForDateAndCodeErrors[keyof MessagesForDateAndCodeErrors];

export type MessagesForDateAndCodeResponses = {
    200: Array<MessageView>;
};

export type MessagesForDateAndCodeResponse = MessagesForDateAndCodeResponses[keyof MessagesForDateAndCodeResponses];

export type MessagesForTrainData = {
    body?: never;
    path: {
        train_id: string;
    };
    query?: never;
    url: '/messages/train/{train_id}';
};

export type MessagesForTrainErrors = {
    default: ErrorBody;
};

export type MessagesForTrainError = MessagesForTrainErrors[keyof MessagesForTrainErrors];

export type MessagesForTrainResponses = {
    200: Array<MessageView>;
};

export type MessagesForTrainResponse = MessagesForTrainResponses[keyof MessagesForTrainResponses];

export type StatusCodesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/status_codes/';
};

export type StatusCodesErrors = {
    default: ErrorBody;
};

export type StatusCodesError = StatusCodesErrors[keyof StatusCodesErrors];

export type StatusCodesResponses = {
    200: Array<StatusCodeView>;
};

export type StatusCodesResponse = StatusCodesResponses[keyof StatusCodesResponses];

export type ClientOptions = {
    baseUrl: `${string}://${string}/v1` | (string & {});
};
