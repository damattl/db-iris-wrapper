/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as StationsRouteImport } from './routes/stations'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TrainsDs100DateRouteImport } from './routes/trains.$ds100.$date'

const StationsRoute = StationsRouteImport.update({
  id: '/stations',
  path: '/stations',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TrainsDs100DateRoute = TrainsDs100DateRouteImport.update({
  id: '/trains/$ds100/$date',
  path: '/trains/$ds100/$date',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/stations': typeof StationsRoute
  '/trains/$ds100/$date': typeof TrainsDs100DateRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/stations': typeof StationsRoute
  '/trains/$ds100/$date': typeof TrainsDs100DateRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/stations': typeof StationsRoute
  '/trains/$ds100/$date': typeof TrainsDs100DateRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/stations' | '/trains/$ds100/$date'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/stations' | '/trains/$ds100/$date'
  id: '__root__' | '/' | '/stations' | '/trains/$ds100/$date'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  StationsRoute: typeof StationsRoute
  TrainsDs100DateRoute: typeof TrainsDs100DateRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/stations': {
      id: '/stations'
      path: '/stations'
      fullPath: '/stations'
      preLoaderRoute: typeof StationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/trains/$ds100/$date': {
      id: '/trains/$ds100/$date'
      path: '/trains/$ds100/$date'
      fullPath: '/trains/$ds100/$date'
      preLoaderRoute: typeof TrainsDs100DateRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  StationsRoute: StationsRoute,
  TrainsDs100DateRoute: TrainsDs100DateRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
